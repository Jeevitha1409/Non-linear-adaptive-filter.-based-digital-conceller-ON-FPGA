#include <iostream>
#include <vector>

class LMSFilter {
public:
    LMSFilter(int filterLength, double stepSize) 
        : filterLength(filterLength), stepSize(stepSize) {
        coefficients.resize(filterLength, 0.0);
    }

    double update(double input, double desiredOutput) {
        double output = 0.0;
        for (int i = 0; i < filterLength; i++) {
            output += coefficients[i] * input;
        }

        double error = desiredOutput - output;
        for (int i = 0; i < filterLength; i++) {
            coefficients[i] += stepSize * error * input;
        }

        return output;
    }

private:
    int filterLength;
    double stepSize;
    std::vector<double> coefficients;
};

int main() {
